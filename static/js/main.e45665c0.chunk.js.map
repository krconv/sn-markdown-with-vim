{"version":3,"sources":["StandardNotes.js","Editor.js","index.js"],"names":["src_StandardNotes","StandardNotes","_this","this","Object","classCallCheck","noteUpdates","rx","componentManager","ComponentManager","name","streamContextItem","note","next","pipe","filter","getNoteUpdates","map","content","text","_this2","Promise","resolve","saveItem","_this3","getValue","useTimeout","value","delay","_useState7","useState","_useState8","slicedToArray","active","setActive","useEffect","timeout","setTimeout","clearTimeout","Editor","_useState","_useState2","noteContent","setNoteContent","_useState3","_useState4","loading","setLoading","_useState5","_useState6","dirty","setDirty","editing","subscription","getNoteContentUpdates","subscribe","unsubscribe","saveNoteContent","react_default","a","createElement","Fragment","react_codemirror2","editorDidMount","editor","refresh","options","mode","keyMap","onBeforeChange","data","JSON","stringify","ReactDOM","render","src_Editor","document","getElementById"],"mappings":"wTA8CeA,EAAA,eAzCb,SAAAC,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GACZE,KAAKG,YAAc,IAAIC,IAAmB,MAQ1CJ,KAAKK,iBAAmB,IAAIC,IANR,CAClB,CACEC,KAAM,wBAIgD,cAE1DP,KAAKK,iBAAiBG,kBAAkB,SAAAC,GACtCV,EAAKI,YAAYO,KAAKD,kEAKxB,OAAOT,KAAKG,YAAYQ,KAAKC,YAAO,SAAAH,GAAI,OAAIA,qDAI5C,OAAOT,KAAKa,iBAAiBF,KAC3BG,YAAI,SAAAL,GAAI,OAAKA,EAAOA,EAAKM,QAAQC,KAAO,yCAInCP,GAAM,IAAAQ,EAAAjB,KACb,OAAO,IAAIkB,QAAQ,SAAAC,GACjBF,EAAKZ,iBAAiBe,SAASX,EAAMU,6CAIzBJ,GAAS,IAAAM,EAAArB,KACvB,OAAO,IAAIkB,QAAQ,SAAAC,GACjB,IAAMV,EAAOY,EAAKlB,YAAYmB,WAC9Bb,EAAKM,QAAQC,KAAOD,EACpBM,EAAKhB,iBAAiBe,SAASX,EAAMU,qBC4B3C,IAAMI,EAAa,SAACC,EAAOC,GAAU,IAAAC,EACPC,oBAAS,GADFC,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAyB,EAAA,GAC5BI,EAD4BF,EAAA,GACpBG,EADoBH,EAAA,GAmBnC,OAhBAI,oBAAU,WACR,GAAa,MAATR,EAAJ,CAIAO,GAAU,GAEV,IAAME,EAAUC,WAAW,WACzBH,GAAU,IACTN,GAEH,OAAO,WACLU,aAAaF,MAEd,CAACT,EAAOC,IAEJK,GAGMM,EAjFf,WAAkB,IAAAC,EACsBV,mBAAS,MAD/BW,EAAArC,OAAA4B,EAAA,EAAA5B,CAAAoC,EAAA,GACTE,EADSD,EAAA,GACIE,EADJF,EAAA,GAAAG,EAEcd,oBAAS,GAFvBe,EAAAzC,OAAA4B,EAAA,EAAA5B,CAAAwC,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGUlB,oBAAS,GAHnBmB,EAAA7C,OAAA4B,EAAA,EAAA5B,CAAA4C,EAAA,GAGTE,EAHSD,EAAA,GAGFE,EAHEF,EAAA,GAIVG,EAAU1B,EAAWgB,EAAa,KA6BxC,OA3BAP,oBAAU,WACR,IAAMkB,EAAepD,EAAcqD,wBAAwBC,UACzD,SAAArC,GACOkC,IACHT,EAAezB,GACfiC,GAAS,MAKf,OAAO,WACLE,EAAaG,gBAEd,CAACJ,IAEJjB,oBAAU,WACY,OAAhBO,GACFK,GAAW,IAEZ,CAACL,IAEJP,oBAAU,WACY,OAAhBO,GAAwBQ,GAC1BjD,EAAcwD,gBAAgBf,IAE/B,CAACA,EAAaQ,IAGfQ,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACGf,EACC,UAEAY,EAAAC,EAAAC,cAACE,EAAA,WAAD,CACEnC,MAAOe,EACPqB,eAAgB,SAAAC,GACdA,EAAOC,WAETC,QAAS,CACPC,KAAM,WACNC,OAAQ,OAEVC,eAAgB,SAACL,EAAQM,EAAM3C,GAC7BwB,GAAS,GACTR,EAAehB,MAfvB,UAmBU4C,KAAKC,UAAUtB,GAnBzB,YAoBYqB,KAAKC,UAAUpB,KC3D/BqB,IAASC,OAAOhB,EAAAC,EAAAC,cAACe,EAAD,MAAYC,SAASC,eAAe","file":"static/js/main.e45665c0.chunk.js","sourcesContent":["import ComponentManager from \"sn-components-api\";\nimport * as rx from \"rxjs\";\nimport { filter, map } from \"rxjs/operators\";\n\nclass StandardNotes {\n  constructor() {\n    this.noteUpdates = new rx.BehaviorSubject(null);\n\n    const permissions = [\n      {\n        name: \"stream-context-item\"\n      }\n    ];\n\n    this.componentManager = new ComponentManager(permissions, () => {});\n\n    this.componentManager.streamContextItem(note => {\n      this.noteUpdates.next(note);\n    });\n  }\n\n  getNoteUpdates() {\n    return this.noteUpdates.pipe(filter(note => note));\n  }\n\n  getNoteContentUpdates() {\n    return this.getNoteUpdates().pipe(\n      map(note => (note ? note.content.text : null))\n    );\n  }\n\n  saveNote(note) {\n    return new Promise(resolve => {\n      this.componentManager.saveItem(note, resolve);\n    });\n  }\n\n  saveNoteContent(content) {\n    return new Promise(resolve => {\n      const note = this.noteUpdates.getValue();\n      note.content.text = content;\n      this.componentManager.saveItem(note, resolve);\n    });\n  }\n}\n\nexport default new StandardNotes();\n","import React, { useState, useEffect } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\n\nimport \"codemirror/mode/markdown/markdown\";\nimport \"codemirror/keymap/vim\";\nimport \"codemirror/lib/codemirror.css\";\n\nimport StandardNotes from \"./StandardNotes\";\nimport \"./Editor.scss\";\n\nfunction Editor() {\n  const [noteContent, setNoteContent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [dirty, setDirty] = useState(false);\n  const editing = useTimeout(noteContent, 2000);\n\n  useEffect(() => {\n    const subscription = StandardNotes.getNoteContentUpdates().subscribe(\n      content => {\n        if (!editing) {\n          setNoteContent(content);\n          setDirty(false);\n        }\n      }\n    );\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [editing]);\n\n  useEffect(() => {\n    if (noteContent !== null) {\n      setLoading(false);\n    }\n  }, [noteContent]);\n\n  useEffect(() => {\n    if (noteContent !== null && dirty) {\n      StandardNotes.saveNoteContent(noteContent);\n    }\n  }, [noteContent, dirty]);\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        \"LOADING\"\n      ) : (\n        <CodeMirror\n          value={noteContent}\n          editorDidMount={editor => {\n            editor.refresh();\n          }}\n          options={{\n            mode: \"markdown\",\n            keyMap: \"vim\"\n          }}\n          onBeforeChange={(editor, data, value) => {\n            setDirty(true);\n            setNoteContent(value);\n          }}\n        />\n      )}\n      Dirty: {JSON.stringify(dirty)}\n      Editing: {JSON.stringify(editing)}\n    </React.Fragment>\n  );\n}\n\nconst useTimeout = (value, delay) => {\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (value == null) {\n      return;\n    }\n\n    setActive(true);\n\n    const timeout = setTimeout(() => {\n      setActive(false);\n    }, delay);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [value, delay]);\n\n  return active;\n};\n\nexport default Editor;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Editor from \"./Editor\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n"],"sourceRoot":""}