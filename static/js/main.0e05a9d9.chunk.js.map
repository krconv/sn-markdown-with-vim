{"version":3,"sources":["StandardNotes.js","Editor.js","index.js"],"names":["src_StandardNotes","StandardNotes","_this","this","Object","classCallCheck","noteUpdates","rx","componentManager","ComponentManager","name","streamContextItem","note","next","pipe","filter","getNoteUpdates","map","content","text","getValue","saveItemWithPresave","isMobile","HyperMD","require","calculateCursor","editor","coords","getCursorCoords","character","getCharacterAtCoords","classes","getClassesAtCoords","_simulateCharacter","simulateCharacter","characterElement","lineElement","position","calculateCursorPosition","measureElementOffset","size","measureElementSize","coordsChar","cursorCoords","getLine","line","charAt","ch","getClassesForLine","getClassesForCharacter","lineView","display","renderedView","textClass","getTokenTypeAt","buildCharacterElement","buildLineElement","simulateLine","className","document","createTextNode","buildElement","type","child","element","createElement","appendChild","parent","measure","removeAllChildren","childNodes","length","removeChild","firstChild","rect","getBoundingClientRect","width","right","left","height","bottom","top","outter","inner","outterRect","innerRect","offset","base","updateCursor","styleSheet","deleteRule","err","insertRule","concat","ReactDOM","render","react_default","a","ref","useRef","_useState","useState","_useState2","slicedToArray","setNote","loading","_useState3","_useState4","setEditor","_useState5","_useState6","setStyleSheet","useEffect","fromTextArea","current","keyMap","isMobileDevice","lineNumbers","subscription","subscribe","newNote","uuid","getDoc","clearHistory","markClean","unsubscribe","isClean","setValue","handleEditorChange","useCallback","saveNoteContent","on","off","style","head","sheet","updateCursorPosition","_calculateCursor","getElementById"],"mappings":"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","file":"static/js/main.0e05a9d9.chunk.js","sourcesContent":["import ComponentManager from \"sn-components-api\";\nimport * as rx from \"rxjs\";\nimport { filter, map } from \"rxjs/operators\";\n\nclass StandardNotes {\n  constructor() {\n    this.noteUpdates = new rx.BehaviorSubject(null);\n\n    const permissions = [\n      {\n        name: \"stream-context-item\"\n      }\n    ];\n\n    this.componentManager = new ComponentManager(permissions, () => {});\n\n    this.componentManager.streamContextItem(note => {\n      this.noteUpdates.next(note);\n    });\n  }\n\n  getNoteUpdates() {\n    return this.noteUpdates.pipe(filter(note => note));\n  }\n\n  getNoteContentUpdates() {\n    return this.getNoteUpdates().pipe(\n      map(note => (note ? note.content.text : null))\n    );\n  }\n\n  saveNoteContent(content, getValue) {\n    const note = this.noteUpdates.getValue();\n    if (note) {\n      note.content.text = content;\n      this.componentManager.saveItemWithPresave(note, () => {\n        note.content.text = getValue();\n      });\n    }\n  }\n\n  isMobileDevice() {\n    return this.componentManager.isMobile;\n  }\n}\n\nexport default new StandardNotes();\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"codemirror/keymap/vim\";\nimport StandardNotes from \"./StandardNotes\";\n\nimport \"./Editor.scss\";\n\nvar HyperMD = require(\"hypermd\");\n\nexport default function Editor() {\n  const ref = useRef();\n  const [note, setNote] = useState(null);\n  const loading = useRef(false);\n  const [editor, setEditor] = useState(null);\n  const [styleSheet, setStyleSheet] = useState(null);\n\n  useEffect(() => {\n    setEditor(\n      HyperMD.fromTextArea(ref.current, {\n        keyMap: StandardNotes.isMobileDevice() ? \"default\" : \"vim\",\n        lineNumbers: false\n      })\n    );\n  }, [ref]);\n\n  useEffect(() => {\n    if (editor) {\n      const subscription = StandardNotes.getNoteUpdates().subscribe(newNote => {\n        const didNoteChange = !note || note.uuid !== newNote.uuid;\n\n        if (didNoteChange) {\n          editor.getDoc().clearHistory();\n          editor.getDoc().markClean();\n        }\n        setNote(newNote);\n      });\n      return () => {\n        subscription.unsubscribe();\n      };\n    }\n  }, [editor, note]);\n\n  useEffect(() => {\n    if (editor && note) {\n      const isOutOfSync =\n        editor.getDoc().isClean() &&\n        editor.getDoc().getValue() !== note.content.text;\n      if (isOutOfSync) {\n        loading.current = true;\n        editor.getDoc().setValue(note.content.text);\n        loading.current = false;\n      }\n    }\n  }, [editor, note]);\n\n  const handleEditorChange = useCallback(() => {\n    if (!loading.current) {\n      StandardNotes.saveNoteContent(editor.getValue(), () => {\n        editor.getDoc().markClean();\n        return editor.getDoc().getValue();\n      });\n    }\n  }, [editor, loading]);\n\n  useEffect(() => {\n    if (editor) {\n      editor.on(\"change\", handleEditorChange);\n\n      return () => {\n        editor.off(\"change\", handleEditorChange);\n      };\n    }\n  }, [editor, handleEditorChange]);\n\n  useEffect(() => {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    setStyleSheet(style.sheet);\n  }, []);\n\n  const updateCursorPosition = useCallback(() => {\n    if (editor) {\n      const { size, position } = calculateCursor(editor);\n      updateCursor(position, size, styleSheet);\n    }\n  }, [editor, styleSheet]);\n\n  useEffect(() => {\n    if (editor) {\n      editor.on(\"cursorActivity\", updateCursorPosition);\n      editor.on(\"update\", updateCursorPosition);\n\n      return () => {\n        editor.off(\"cursorActivity\", updateCursorPosition);\n        editor.off(\"update\", updateCursorPosition);\n      };\n    }\n  }, [editor, updateCursorPosition]);\n\n  return <textarea ref={ref} />;\n}\n\nconst calculateCursor = editor => {\n  const coords = getCursorCoords(editor);\n  const character = getCharacterAtCoords(coords, editor) || \"X\";\n\n  const classes = getClassesAtCoords(coords, editor);\n\n  const { characterElement, lineElement } = simulateCharacter(\n    character,\n    classes,\n    editor\n  );\n\n  const position = calculateCursorPosition(\n    measureElementOffset(lineElement, characterElement),\n    editor\n  );\n\n  return {\n    size: measureElementSize(characterElement),\n    position\n  };\n};\n\nconst getCursorCoords = editor => {\n  return editor.coordsChar(editor.cursorCoords());\n};\n\nconst getCharacterAtCoords = (coords, editor) => {\n  const line = editor.getLine(coords.line);\n  return line.charAt(coords.ch);\n};\n\nconst getClassesAtCoords = (coords, editor) => {\n  return {\n    line: getClassesForLine(coords, editor),\n    ch: getClassesForCharacter(coords, editor)\n  };\n};\n\nconst getClassesForLine = (coords, editor) => {\n  const lineViews = editor.display.renderedView;\n  const lineView = lineViews[coords.line];\n\n  return (lineView && lineView.textClass) || \"\";\n};\n\nconst getClassesForCharacter = (coords, editor) => {\n  return editor.getTokenTypeAt(coords);\n};\n\nconst simulateCharacter = (character, classes, editor) => {\n  const characterElement = buildCharacterElement(character, classes.character);\n  const lineElement = buildLineElement(characterElement, classes.line);\n  simulateLine(lineElement, editor);\n  return { characterElement, lineElement };\n};\n\nconst buildCharacterElement = (character, className) => {\n  const content = document.createTextNode(character);\n  return buildElement(\"span\", className, content);\n};\n\nconst buildLineElement = (characterElement, className) => {\n  return buildElement(\"pre\", className, characterElement);\n};\n\nconst buildElement = (type, className, child) => {\n  const element = document.createElement(type);\n  element.className = className;\n  element.appendChild(child);\n  return element;\n};\n\nconst simulateLine = (lineElement, editor) => {\n  const parent = editor.display.measure;\n  removeAllChildren(parent);\n  parent.appendChild(lineElement);\n};\n\nconst removeAllChildren = element => {\n  while (element.childNodes.length > 0) {\n    element.removeChild(element.firstChild);\n  }\n};\n\nconst measureElementSize = element => {\n  const rect = element.getBoundingClientRect();\n  return {\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n};\n\nconst measureElementOffset = (outter, inner) => {\n  const outterRect = outter.getBoundingClientRect();\n  const innerRect = inner.getBoundingClientRect();\n  return {\n    left: innerRect.left - outterRect.left,\n    top: innerRect.top - outterRect.top\n  };\n};\n\nconst calculateCursorPosition = (offset, editor) => {\n  const base = editor.cursorCoords(true, \"local\");\n  return {\n    left: base.left + offset.left,\n    top: base.top + offset.top\n  };\n};\n\nconst updateCursor = (position, size, styleSheet) => {\n  if (size && position && styleSheet) {\n    try {\n      styleSheet.deleteRule(0);\n    } catch (err) {}\n\n    styleSheet.insertRule(\n      `.CodeMirror-cursor {\n         width: ${size.width}px !important;\n         height: ${size.height + 4}px !important;\n         top: ${position.top - 4}px !important;\n       }`,\n      0\n    );\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Editor from \"./Editor\";\n\nReactDOM.render(<Editor />, document.getElementById(\"root\"));\n"],"sourceRoot":""}